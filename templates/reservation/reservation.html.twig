{% extends "base.html.twig" %}


{% block javascripts %}
	 <script>
	document.addEventListener('DOMContentLoaded', function () {
	               
					 const SeanceSelect = document.querySelector('[name="reservation\\[seance\\]"]');
            
								  const checkBoxPMR = document.getElementById('reservation_PersonneAMobiliteReduite');
									const NbPlacesPMRSelect = document.getElementById('reservation_NbPlacesPMR');
									const NbPlacesSelect = document.getElementById('reservation_NbPlaces');
									const submitButton = document.getElementById('submit-button');
	                const filmId = {{ film.id}};
	                
	    
	                async function loadData() {
	                submitButton.disabled = true;
	                try {
								            const responseSeance = await fetch("{{ path('ajax_get_seances_by_film') }}", {
								                method: 'POST',
								                headers: {
								                    'Content-Type': 'application/json',
								                    'X-Requested-With': 'XMLHttpRequest'
								                },
								                body: JSON.stringify({ film_Id: filmId })
								             
								            });
	                          
								
								            if (responseSeance.ok) {
								                const dataHoraire = await responseSeance.json();
												
												
	                        const horaires = dataHoraire.horaireArraySeance;
	                        console.log(horaires);
	                       
	
	                        //
	                    
	                        const option = document.createElement('option');
	                        option.value = 0;
	                                    option.textContent = "Veuillez sélectionner une seance" ;
	                                    SeanceSelect.appendChild(option);
	          
	                          horaires.forEach(horaire => {
	                            const option = document.createElement('option');
	                            option.value = horaire.id;
	                            option.textContent = horaire.jour + " \n" + horaire.debut + " (Fin de seance pour : " + horaire.fin + " )";
	                            SeanceSelect.appendChild(option);
	                            
	                          })
	                          
	                            } else {
	                                console.error('Erreur lors du chargement des seances:', responseSeance.statusText);
	                            }
	                      
	                        } catch (error) {
	                            console.error('Erreur lors de la requête:', error);
	                        }
	}
	loadData();
	                       
	
	
	});
	
	</script>

{% endblock %}

{% block body %}

	{# Affiche du film avec ces informations #}


	<fieldset>
		<legend>
			{{ film.titre }}</legend>

		<img src="{{ asset('uploads/images/' ~ film.idImage) }}" alt="{{ film.titre }}">

		{{ form_start(formReservation) }}

		{# Selection de la SEANCE proposé par le cinéma #}
		<div class="form-group">
			
				{{ form_label(formReservation.seance, 'Sélectionnez la séance : ', {'label_attr': {'class': 'form-check-label'}}) }}
				{{ form_widget(formReservation.seance, {'attr': {'class': 'form-control'}}) }}
				{{ form_errors(formReservation.seance) }}
			
		</div>

		{# une CASE A COCHER pour savoir si PMR affichera également une liste déroulante pour donner la liste déroulante pour les place dispo PMR #}

		<div class="form-check">
			{{ form_label(formReservation.PersonneAMobiliteReduite, 'Personne à mobilité réduite : ', {'label_attr': {'class': 'form-check-label'}}) }}
			{{ form_widget(formReservation.PersonneAMobiliteReduite , {'attr': {'disabled': true}}) }}
			{{ form_errors(formReservation.PersonneAMobiliteReduite) }}
		</div>

		{# Une fois sélectionner on donne le NB PLACEPMR ( si case à chocher == True ) pour l'utilisatuer  #}
		<div class="form-group">
			{{ form_label(formReservation.NbPlacesPMR, 'Sélectionnez le nombre de place(s) que vous souhaitez réserver <br> pour une personne à mobilité réduite : ', {'label_attr': {'class': 'form-label mt-4'}}) }}
			{{ form_widget(formReservation.NbPlacesPMR, {'attr': {'disabled': true}})  }}
			{{ form_errors(formReservation.NbPlacesPMR) }}
		</div>
		{# Une fois sélectionner on donne le NB PLACE pour l'utilisatuer  #}
		<div class="form-group">
			{{ form_label(formReservation.NbPlaces, 'Sélectionnez le nombre de place(s) que vous souhaitez réserver :', {'label_attr': {'class': 'form-label mt-4'}}) }}
			{{ form_widget(formReservation.NbPlaces, {'attr': {'disabled': true}})  }}
			{{ form_errors(formReservation.NbPlaces) }}
		</div>

		<span>
			<div class="form-group">

				{{ form_label(formReservation.Prix, 'Prix ',  {'label_attr': {'class': 'form-label mt-4'}})}}
				{{ form_widget(formReservation.Prix, {'attr': {'disabled': true}}) }}
				{{ form_errors(formReservation.Prix) }}
			</div>

			{# Si plus de place == 0 dans ce cas Message "Il n'y a plus de place pour la séance selectionné "  #}

			{{ form_end(formReservation) }}


		</fieldset>


		{% if not app.user %}

			<a class="btn btn-primary" href="{{ path('security_registration')}}">Valider</a>

		{% else %}
			<button type="submit" class="btn btn-primary" id="submit-button">
				Valider
			</button>

		{% endif %}

	{% endblock %}
